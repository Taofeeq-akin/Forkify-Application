{"version":3,"sources":["src/js/controller.js"],"names":["console","log","icons","recipeContainer","document","querySelector","timeout","s","Promise","_","reject","setTimeout","Error","showRecipe","fetch","res","json","data","ok","message","status","recipe","id","title","servings","sourceUrl","source_url","publisher","ingredients","image","image_url","cookingTime","cooking_time","markup","map","ing","quantity","unit","description","join","innerHTML","insertAdjacentHTML","alert"],"mappings":";;AAAA;;;;;;+CACA;;;;;;AAAAA,OAAO,CAACC,GAAR,CAAYC,cAAZ;AAEA,IAAMC,eAAe,GAAGC,QAAQ,CAACC,aAAT,CAAuB,SAAvB,CAAxB;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAAUC,CAAV,EAAa;EAC3B,OAAO,IAAIC,OAAJ,CAAY,UAAUC,CAAV,EAAaC,MAAb,EAAqB;IACtCC,UAAU,CAAC,YAAY;MACrBD,MAAM,CAAC,IAAIE,KAAJ,gDAAkDL,CAAlD,aAAD,CAAN;IACD,CAFS,EAEPA,CAAC,GAAG,IAFG,CAAV;EAGD,CAJM,CAAP;AAKD,CAND,EAQA;AAEA;;;AACA,IAAMM,UAAU;EAAA,sEAAG;IAAA;IAAA;MAAA;QAAA;UAAA;YAAA;YAAA;YAAA,OAGGC,KAAK,EACrB;YACA,2EAFqB,CAHR;;UAAA;YAGTC,GAHS;YAAA;YAAA,OAOIA,GAAG,CAACC,IAAJ,EAPJ;;UAAA;YAOTC,IAPS;;YAAA,IAWVF,GAAG,CAACG,EAXM;cAAA;cAAA;YAAA;;YAAA,MAWI,IAAIN,KAAJ,WAAaK,IAAI,CAACE,OAAlB,eAA8BJ,GAAG,CAACK,MAAlC,OAXJ;;UAAA;YAaTC,MAbS,GAaEJ,IAAI,CAACA,IAbP,CAaTI,MAbS,EAaa;;YAC5BA,MAAM,GAAG;cACPC,EAAE,EAAED,MAAM,CAACC,EADJ;cAEPC,KAAK,EAAEF,MAAM,CAACE,KAFP;cAGPC,QAAQ,EAAEH,MAAM,CAACG,QAHV;cAIPC,SAAS,EAAEJ,MAAM,CAACK,UAJX;cAKPC,SAAS,EAAEN,MAAM,CAACM,SALX;cAMPC,WAAW,EAAEP,MAAM,CAACO,WANb;cAOPC,KAAK,EAAER,MAAM,CAACS,SAPP;cAQPC,WAAW,EAAEV,MAAM,CAACW;YARb,CAAT;YAUAhC,OAAO,CAACC,GAAR,CAAYoB,MAAZ,EAxBe,CA0Bf;;YACMY,MA3BS,2EA6BGZ,MAAM,CAACQ,KA7BV,sBA8BbR,MAAM,CAACE,KA9BM,oGAiCCF,MAAM,CAACE,KAjCR,8UA2CLF,MAAM,CAACU,WA3CF,8UAoDLV,MAAM,CAACG,QApDF,ykCAqFPH,MAAM,CAACO,WAAP,CACCM,GADD,CACK,UAAAC,GAAG,EAAI;cACV,mPAKkCA,GAAG,CAACC,QALtC,yHAOiCD,GAAG,CAACE,IAPrC,wCAQMF,GAAG,CAACG,WARV;YAYD,CAdD,EAeCC,IAfD,CAeM,EAfN,CArFO,oTA6GLlB,MAAM,CAACM,SA7GF,iLAmHCN,MAAM,CAACI,SAnHR;YA6HftB,eAAe,CAACqC,SAAhB,GAA4B,EAA5B;YACArC,eAAe,CAACsC,kBAAhB,CAAmC,YAAnC,EAAiDR,MAAjD;YA9He;YAAA;;UAAA;YAAA;YAAA;YAgIfS,KAAK,aAAL;;UAhIe;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAAH;;EAAA,gBAAV7B,UAAU;IAAA;EAAA;AAAA,GAAhB;;AAmIAA,UAAU","file":"controller.e87f5190.js","sourceRoot":"..","sourcesContent":["import icons from '../img/icons.svg';\nconsole.log(icons);\n\nconst recipeContainer = document.querySelector('.recipe');\n\nconst timeout = function (s) {\n  return new Promise(function (_, reject) {\n    setTimeout(function () {\n      reject(new Error(`Request took too long! Timeout after ${s} second`));\n    }, s * 1000);\n  });\n};\n\n// https://forkify-api.herokuapp.com/v2\n\n///////////////////////////////////////\nconst showRecipe = async function () {\n  try {\n    // 1) Loading Recipe\n    const res = await fetch(\n      // `https://forkify-api.herokuapp.com/api/v2/recipes/5ed6604691c37cdc054bd015`\n      'https://forkify-api.herokuapp.com/api/v2/recipes/5ed6604591c37cdc054bc886'\n    );\n    const data = await res.json(); // to get data from fetch api and store it to the variable\n\n    // console.log(res, data);\n\n    if (!res.ok) throw new Error(`${data.message} (${res.status})`);\n\n    let { recipe } = data.data; // since we have recipe on both side we can just distruct the variable\n    recipe = {\n      id: recipe.id,\n      title: recipe.title,\n      servings: recipe.servings,\n      sourceUrl: recipe.source_url,\n      publisher: recipe.publisher,\n      ingredients: recipe.ingredients,\n      image: recipe.image_url,\n      cookingTime: recipe.cooking_time,\n    };\n    console.log(recipe);\n\n    // 2) Rendering Recipe\n    const markup = `\n       <figure class=\"recipe__fig\">\n          <img src=\"${recipe.image}\" alt=\"${\n      recipe.title\n    }\" class=\"recipe__img\" />\n          <h1 class=\"recipe__title\">\n            <span>${recipe.title}</span>\n          </h1>\n        </figure>\n\n        <div class=\"recipe__details\">\n          <div class=\"recipe__info\">\n            <svg class=\"recipe__info-icon\">\n              <use href=\"icons#icon-clock\"></use>\n            </svg>\n            <span class=\"recipe__info-data recipe__info-data--minutes\">${\n              recipe.cookingTime\n            }</span>\n            <span class=\"recipe__info-text\">minutes</span>\n          </div>\n          <div class=\"recipe__info\">\n            <svg class=\"recipe__info-icon\">\n              <use href=\"icons#icon-users\"></use>\n            </svg>\n            <span class=\"recipe__info-data recipe__info-data--people\">${\n              recipe.servings\n            }</span>\n            <span class=\"recipe__info-text\">servings</span>\n\n            <div class=\"recipe__info-buttons\">\n              <button class=\"btn--tiny btn--increase-servings\">\n                <svg>\n                  <use href=\"icons#icon-minus-circle\"></use>\n                </svg>\n              </button>\n              <button class=\"btn--tiny btn--increase-servings\">\n                <svg>\n                  <use href=\"icons#icon-plus-circle\"></use>\n                </svg>\n              </button>\n            </div>\n          </div>\n\n          <div class=\"recipe__user-generated\">\n            <svg>\n              <use href=\"icons#icon-user\"></use>\n            </svg>\n          </div>\n          <button class=\"btn--round\">\n            <svg class=\"\">\n              <use href=\"icons#icon-bookmark-fill\"></use>\n            </svg>\n          </button>\n        </div>\n\n        <div class=\"recipe__ingredients\">\n          <h2 class=\"heading--2\">Recipe ingredients</h2>\n          <ul class=\"recipe__ingredient-list\">\n          ${recipe.ingredients\n            .map(ing => {\n              return `\n              <li class=\"recipe__ingredient\">\n                <svg class=\"recipe__icon\">\n                  <use href=\"icons#icon-check\"></use>\n                </svg>\n                <div class=\"recipe__quantity\">${ing.quantity}</div>\n                <div class=\"recipe__description\">\n                  <span class=\"recipe__unit\">${ing.unit}</span>\n                  ${ing.description}\n                </div>\n              </li>\n            `;\n            })\n            .join('')} \n          </ul>\n        </div>\n\n        <div class=\"recipe__directions\">\n          <h2 class=\"heading--2\">How to cook it</h2>\n          <p class=\"recipe__directions-text\">\n            This recipe was carefully designed and tested by\n            <span class=\"recipe__publisher\">${\n              recipe.publisher\n            }</span>. Please check out\n            directions at their website.\n          </p>\n          <a\n            class=\"btn--small recipe__btn\"\n            href=\"${recipe.sourceUrl}\"\n            target=\"_blank\"\n          >\n            <span>Directions</span>\n            <svg class=\"search__icon\">\n              <use href=\"src/img/icons.svg#icon-arrow-right\"></use>\n            </svg>\n          </a>\n        </div>\n    `;\n    recipeContainer.innerHTML = '';\n    recipeContainer.insertAdjacentHTML('afterbegin', markup);\n  } catch (err) {\n    alert(err);\n  }\n};\nshowRecipe();\n"]}